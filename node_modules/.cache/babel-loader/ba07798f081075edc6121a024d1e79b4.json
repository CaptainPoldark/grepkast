{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PodcastPlayer(props) {\n  _s();\n\n  const [playerState, setPlayerState] = useState([{\n    title: \"TITLE HERE\",\n    author: \"AUTHOR HERE\",\n    channel: \"CHANNEL TITLE\",\n    episodeImage: \"PICTURE\",\n    channelImage: \"CHANNEL IMAGBE\",\n    pubDate: \"PUBLISHED DATE\",\n    sourceAudio: \"my.podcast\",\n    description: \"BLAH BLAH BLAH\"\n  }]);\n  useEffect(() => {\n    fetch(props.rssfeed).then(response => response.text()).then(str => new window.DOMParser().parseFromString(str, \"text/xml\")).then(data => {\n      const itemList = data.querySelectorAll(\"item\");\n      let html = ``;\n      const items = [];\n      itemList.forEach(e => {\n        items.push({\n          pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n          title: e.querySelector(\"title\").textContent,\n          sourceAudio: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n          description: e.querySelector(\"description\").textContent,\n          episodeImage: e.childNodes[21].attributes.href.value\n        });\n      });\n      setPlayerState(items);\n    });\n  }, [props.rssfeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"podcastPlayer\", playerState.forEach(e => {\n      `<div>\n      \n      <p>${playerState.title}</p><br />\n      <p>${playerState.source}</p><br />\n      <p>${playerState.pubDate}</p><br />`;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PodcastPlayer, \"y5wMRnArxjMkKoz7GQ7Pfw9dti0=\");\n\n_c = PodcastPlayer;\nexport default PodcastPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastPlayer\");","map":{"version":3,"names":["React","useState","useEffect","PodcastPlayer","props","playerState","setPlayerState","title","author","channel","episodeImage","channelImage","pubDate","sourceAudio","description","fetch","rssfeed","then","response","text","str","window","DOMParser","parseFromString","data","itemList","querySelectorAll","html","items","forEach","e","push","Date","querySelector","textContent","getAttribute","childNodes","attributes","href","value","source"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction PodcastPlayer(props) {\n  const [playerState, setPlayerState] = useState([\n    {\n      title: \"TITLE HERE\",\n      author: \"AUTHOR HERE\",\n      channel: \"CHANNEL TITLE\",\n      episodeImage: \"PICTURE\",\n      channelImage: \"CHANNEL IMAGBE\",\n      pubDate: \"PUBLISHED DATE\",\n      sourceAudio: \"my.podcast\",\n      description: \"BLAH BLAH BLAH\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(props.rssfeed)\n      .then((response) => response.text())\n      .then((str) => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        const itemList = data.querySelectorAll(\"item\");\n        let html = ``;\n        const items = [];\n        itemList.forEach((e) => {\n          items.push({\n            pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n            title: e.querySelector(\"title\").textContent,\n            sourceAudio: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n            description: e.querySelector(\"description\").textContent,\n            episodeImage: e.childNodes[21].attributes.href.value,\n          });\n        });\n        setPlayerState(items);\n      });\n  }, [props.rssfeed]);\n  return (\n    <div>\n      podcastPlayer\n      {playerState.forEach((e) => {\n        `<div>\n      \n      <p>${playerState.title}</p><br />\n      <p>${playerState.source}</p><br />\n      <p>${playerState.pubDate}</p><br />`;\n      })}\n    </div>\n  );\n}\n\nexport default PodcastPlayer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC5B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAC7C;IACEM,KAAK,EAAE,YADT;IAEEC,MAAM,EAAE,aAFV;IAGEC,OAAO,EAAE,eAHX;IAIEC,YAAY,EAAE,SAJhB;IAKEC,YAAY,EAAE,gBALhB;IAMEC,OAAO,EAAE,gBANX;IAOEC,WAAW,EAAE,YAPf;IAQEC,WAAW,EAAE;EARf,CAD6C,CAAD,CAA9C;EAaAZ,SAAS,CAAC,MAAM;IACda,KAAK,CAACX,KAAK,CAACY,OAAP,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,GAAD,IAAS,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAuCH,GAAvC,EAA4C,UAA5C,CAFjB,EAGGH,IAHH,CAGSO,IAAD,IAAU;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAACE,gBAAL,CAAsB,MAAtB,CAAjB;MACA,IAAIC,IAAI,GAAI,EAAZ;MACA,MAAMC,KAAK,GAAG,EAAd;MACAH,QAAQ,CAACI,OAAT,CAAkBC,CAAD,IAAO;QACtBF,KAAK,CAACG,IAAN,CAAW;UACTnB,OAAO,EAAE,IAAIoB,IAAJ,CAASF,CAAC,CAACG,aAAF,CAAgB,SAAhB,EAA2BC,WAApC,CADA;UAET3B,KAAK,EAAEuB,CAAC,CAACG,aAAF,CAAgB,OAAhB,EAAyBC,WAFvB;UAGTrB,WAAW,EAAEiB,CAAC,CAACG,aAAF,CAAgB,WAAhB,EAA6BE,YAA7B,CAA0C,KAA1C,CAHJ;UAITrB,WAAW,EAAEgB,CAAC,CAACG,aAAF,CAAgB,aAAhB,EAA+BC,WAJnC;UAKTxB,YAAY,EAAEoB,CAAC,CAACM,UAAF,CAAa,EAAb,EAAiBC,UAAjB,CAA4BC,IAA5B,CAAiCC;QALtC,CAAX;MAOD,CARD;MASAjC,cAAc,CAACsB,KAAD,CAAd;IACD,CAjBH;EAkBD,CAnBQ,EAmBN,CAACxB,KAAK,CAACY,OAAP,CAnBM,CAAT;EAoBA,oBACE;IAAA,4BAEGX,WAAW,CAACwB,OAAZ,CAAqBC,CAAD,IAAO;MACzB;AACT;AACA,WAAWzB,WAAW,CAACE,KAAM;AAC7B,WAAWF,WAAW,CAACmC,MAAO;AAC9B,WAAWnC,WAAW,CAACO,OAAQ,YAJvB;IAKD,CANA,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA9CQT,a;;KAAAA,a;AAgDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}