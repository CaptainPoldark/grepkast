{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/AudioPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudoControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AudioPlayer(episodes) {\n  _s();\n\n  const [episodeIndex, setEpisodeIndex] = useState(0);\n  const [episodeProgress, setEpisodeProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const {\n    title,\n    author,\n    episodeImage,\n    sourceAudio\n  } = episodes.episodes[episodeIndex];\n  const audioRef = useRef(new Audio(sourceAudio));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n  const {\n    duration\n  } = audioRef.current;\n\n  const toNextEpisode = () => {\n    if (episodeIndex - 1 < 0) {\n      setEpisodeIndex(episodes.length - 1);\n    } else {\n      setEpisodeIndex(episodeIndex - 1);\n    }\n  };\n\n  const toPrevEpisode = () => {\n    if (episodeIndex < episodes.length - 1) {\n      setEpisodeIndex(episodeIndex + 1);\n    } else {\n      setEpisodeIndex(0);\n    }\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(sourceAudio);\n    setEpisodeIndex(audioRef.current.currentTime);\n\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTime();\n    } else {\n      isReady.current = true;\n    }\n  }, [episodeIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podcast-player\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"episode-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"episode-poster\",\n        src: episodeImage,\n        alt: `Poster for ${title} episode by ${author}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"episode-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"author-text\",\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioControls, {\n        isPlaying: isPlaying,\n        onPrevClick: toPrevEpisode,\n        onNextClick: toNextEpisode,\n        onPlayPauseClick: setIsPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AudioPlayer, \"M6mtZk+A+TTrNBVA7E3Jeqf5DOA=\");\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","AudioPlayer","episodes","episodeIndex","setEpisodeIndex","episodeProgress","setEpisodeProgress","isPlaying","setIsPlaying","title","author","episodeImage","sourceAudio","audioRef","Audio","intervalRef","isReady","duration","current","toNextEpisode","length","toPrevEpisode","play","pause","clearInterval","currentTime","startTime"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/AudioPlayer.jsx"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudoControls\";\n\nfunction AudioPlayer(episodes) {\n  const [episodeIndex, setEpisodeIndex] = useState(0);\n  const [episodeProgress, setEpisodeProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const { title, author, episodeImage, sourceAudio } =\n    episodes.episodes[episodeIndex];\n\n  const audioRef = useRef(new Audio(sourceAudio));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n\n  const { duration } = audioRef.current;\n\n  const toNextEpisode = () => {\n    if (episodeIndex - 1 < 0) {\n      setEpisodeIndex(episodes.length - 1);\n    } else {\n      setEpisodeIndex(episodeIndex - 1);\n    }\n  };\n\n  const toPrevEpisode = () => {\n    if (episodeIndex < episodes.length - 1) {\n      setEpisodeIndex(episodeIndex + 1);\n    } else {\n      setEpisodeIndex(0);\n    }\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    audioRef.current.pause();\n\n    audioRef.current = new Audio(sourceAudio);\n    setEpisodeIndex(audioRef.current.currentTime);\n\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      startTime();\n    } else {\n      isReady.current = true;\n    }\n  }, [episodeIndex]);\n\n  return (\n    <div className=\"podcast-player\">\n      <div className=\"episode-info\">\n        <img\n          className=\"episode-poster\"\n          src={episodeImage}\n          alt={`Poster for ${title} episode by ${author}`}\n        />\n        <h2 className=\"episode-title\">{title}</h2>\n        <h2 className=\"author-text\">{author}</h2>\n        <AudioControls\n          isPlaying={isPlaying}\n          onPrevClick={toPrevEpisode}\n          onNextClick={toNextEpisode}\n          onPlayPauseClick={setIsPlaying}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AudioPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}