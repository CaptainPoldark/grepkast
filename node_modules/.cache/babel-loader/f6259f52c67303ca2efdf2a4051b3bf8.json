{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PodcastPlayer(props) {\n  _s();\n\n  const [playerState, setPlayerState] = useState([]);\n  const [metaData, setMetaData] = useState({});\n  useEffect(() => {\n    fetch(props.rssfeed).then(response => response.text()).then(str => new window.DOMParser().parseFromString(str, \"text/xml\")).then(data => {\n      const tempMetaData = {};\n      tempMetaData.channelImage = data.querySelector(\"image\").children[0].innerHTML;\n      typeof data.querySelector(\"image\").children[0].innerHTML;\n      tempMetaData.channelTitle = data.querySelector(\"image\").children[1].innerHTML;\n      setMetaData(tempMetaData);\n      const itemList = data.querySelectorAll(\"item\");\n      let html = ``;\n      const items = [];\n      itemList.forEach(e => {\n        items.push({\n          pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n          title: e.querySelector(\"title\").textContent,\n          sourceAudio: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n          description: e.querySelector(\"description\").textContent,\n          episodeImage: e.querySelector(\"image\").attributes.href.value\n        });\n      });\n      setPlayerState(items);\n    });\n  }, [props.rssfeed]);\n  console.log(metaData);\n  return playerState.length >= 1 ? /*#__PURE__*/_jsxDEV(AudioPlayer, {\n    episodes: playerState,\n    channelImage: metaData.channelImage,\n    channelTitle: metaData.channelTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) : \"Player loading\";\n}\n\n_s(PodcastPlayer, \"JivpZxKx3UYABUjh+kicn6jbI4k=\");\n\n_c = PodcastPlayer;\nexport default PodcastPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLayoutEffect","AudioPlayer","PodcastPlayer","props","playerState","setPlayerState","metaData","setMetaData","fetch","rssfeed","then","response","text","str","window","DOMParser","parseFromString","data","tempMetaData","channelImage","querySelector","children","innerHTML","channelTitle","itemList","querySelectorAll","html","items","forEach","e","push","pubDate","Date","textContent","title","sourceAudio","getAttribute","description","episodeImage","attributes","href","value","console","log","length"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\n\nfunction PodcastPlayer(props) {\n  const [playerState, setPlayerState] = useState([]);\n  const [metaData, setMetaData] = useState({});\n\n  useEffect(() => {\n    fetch(props.rssfeed)\n      .then((response) => response.text())\n      .then((str) => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        const tempMetaData = {};\n        tempMetaData.channelImage =\n          data.querySelector(\"image\").children[0].innerHTML;\n\n        typeof data.querySelector(\"image\").children[0].innerHTML;\n\n        tempMetaData.channelTitle =\n          data.querySelector(\"image\").children[1].innerHTML;\n        setMetaData(tempMetaData);\n\n        const itemList = data.querySelectorAll(\"item\");\n        let html = ``;\n        const items = [];\n        itemList.forEach((e) => {\n          items.push({\n            pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n            title: e.querySelector(\"title\").textContent,\n            sourceAudio: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n            description: e.querySelector(\"description\").textContent,\n            episodeImage: e.querySelector(\"image\").attributes.href.value,\n          });\n        });\n\n        setPlayerState(items);\n      });\n  }, [props.rssfeed]);\n\n  console.log(metaData);\n\n  return playerState.length >= 1 ? (\n    <AudioPlayer\n      episodes={playerState}\n      channelImage={metaData.channelImage}\n      channelTitle={metaData.channelTitle}\n    />\n  ) : (\n    \"Player loading\"\n  );\n}\n\nexport default PodcastPlayer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,eAA7C,QAAoE,OAApE;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC5B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACdU,KAAK,CAACL,KAAK,CAACM,OAAP,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,GAAD,IAAS,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAuCH,GAAvC,EAA4C,UAA5C,CAFjB,EAGGH,IAHH,CAGSO,IAAD,IAAU;MACd,MAAMC,YAAY,GAAG,EAArB;MACAA,YAAY,CAACC,YAAb,GACEF,IAAI,CAACG,aAAL,CAAmB,OAAnB,EAA4BC,QAA5B,CAAqC,CAArC,EAAwCC,SAD1C;MAGA,OAAOL,IAAI,CAACG,aAAL,CAAmB,OAAnB,EAA4BC,QAA5B,CAAqC,CAArC,EAAwCC,SAA/C;MAEAJ,YAAY,CAACK,YAAb,GACEN,IAAI,CAACG,aAAL,CAAmB,OAAnB,EAA4BC,QAA5B,CAAqC,CAArC,EAAwCC,SAD1C;MAEAf,WAAW,CAACW,YAAD,CAAX;MAEA,MAAMM,QAAQ,GAAGP,IAAI,CAACQ,gBAAL,CAAsB,MAAtB,CAAjB;MACA,IAAIC,IAAI,GAAI,EAAZ;MACA,MAAMC,KAAK,GAAG,EAAd;MACAH,QAAQ,CAACI,OAAT,CAAkBC,CAAD,IAAO;QACtBF,KAAK,CAACG,IAAN,CAAW;UACTC,OAAO,EAAE,IAAIC,IAAJ,CAASH,CAAC,CAACT,aAAF,CAAgB,SAAhB,EAA2Ba,WAApC,CADA;UAETC,KAAK,EAAEL,CAAC,CAACT,aAAF,CAAgB,OAAhB,EAAyBa,WAFvB;UAGTE,WAAW,EAAEN,CAAC,CAACT,aAAF,CAAgB,WAAhB,EAA6BgB,YAA7B,CAA0C,KAA1C,CAHJ;UAITC,WAAW,EAAER,CAAC,CAACT,aAAF,CAAgB,aAAhB,EAA+Ba,WAJnC;UAKTK,YAAY,EAAET,CAAC,CAACT,aAAF,CAAgB,OAAhB,EAAyBmB,UAAzB,CAAoCC,IAApC,CAAyCC;QAL9C,CAAX;MAOD,CARD;MAUApC,cAAc,CAACsB,KAAD,CAAd;IACD,CA5BH;EA6BD,CA9BQ,EA8BN,CAACxB,KAAK,CAACM,OAAP,CA9BM,CAAT;EAgCAiC,OAAO,CAACC,GAAR,CAAYrC,QAAZ;EAEA,OAAOF,WAAW,CAACwC,MAAZ,IAAsB,CAAtB,gBACL,QAAC,WAAD;IACE,QAAQ,EAAExC,WADZ;IAEE,YAAY,EAAEE,QAAQ,CAACa,YAFzB;IAGE,YAAY,EAAEb,QAAQ,CAACiB;EAHzB;IAAA;IAAA;IAAA;EAAA,QADK,GAOL,gBAPF;AASD;;GA/CQrB,a;;KAAAA,a;AAiDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}