{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PodcastGrid(props) {\n  _s();\n\n  const [rowData, setRowData] = useState([]);\n  useEffect(() => {\n    fetch(props.rssfeed).then(response => response.text()).then(str => new window.DOMParser().parseFromString(str, \"text/xml\")).then(data => {\n      const itemList = data.querySelectorAll(\"item\");\n      const channelTitle = data.channel.title;\n      const items = [];\n      itemList.forEach(e => {\n        items.push({\n          pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n          title: e.querySelector(\"title\").textContent,\n          mp3: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n          description: e.querySelector(\"description\").textContent,\n          image: e[10]\n        });\n      });\n      setRowData(items);\n    });\n  }, [props.rssfeed]);\n  const columnDefs = [{\n    headerName: \"Image\",\n    field: \"image.image\"\n  }, {\n    headerName: \"Episode Title\",\n    field: \"title\",\n    wrapText: true,\n    autoHeight: true,\n    flex: 3,\n    resizable: false\n  }, {\n    headerName: \"Published\",\n    field: \"pubDate\",\n    sortable: true\n  }, {\n    headerName: \"Episode\",\n    field: \"mp3\",\n    autoHeight: true,\n    flex: 3,\n    cellRenderer: params => `<audio controls preload=\"none\">\n      <source src=${params.value} type=\"audio/mpeg\" />\n    </audio>`\n  }, {\n    headerName: \"Description\",\n    field: \"description\",\n    autoHeight: true,\n    flex: 3\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: props.height,\n      width: props.width\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"channelTitle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: columnDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PodcastGrid, \"xN2bMZkjhWQ3a2zx1ObaCbGfPzo=\");\n\n_c = PodcastGrid;\nexport default PodcastGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastGrid\");","map":{"version":3,"names":["React","useEffect","useState","AgGridReact","PodcastGrid","props","rowData","setRowData","fetch","rssfeed","then","response","text","str","window","DOMParser","parseFromString","data","itemList","querySelectorAll","channelTitle","channel","title","items","forEach","e","push","pubDate","Date","querySelector","textContent","mp3","getAttribute","description","image","columnDefs","headerName","field","wrapText","autoHeight","flex","resizable","sortable","cellRenderer","params","value","height","width"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastGrid.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nfunction PodcastGrid(props) {\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    fetch(props.rssfeed)\n      .then((response) => response.text())\n      .then((str) => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        const itemList = data.querySelectorAll(\"item\");\n        const channelTitle = data.channel.title;\n        const items = [];\n        itemList.forEach((e) => {\n          items.push({\n            pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n            title: e.querySelector(\"title\").textContent,\n            mp3: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n            description: e.querySelector(\"description\").textContent,\n            image: e[10],\n          });\n        });\n        setRowData(items);\n      });\n  }, [props.rssfeed]);\n  const columnDefs = [\n    {\n      headerName: \"Image\",\n      field: \"image.image\",\n    },\n    {\n      headerName: \"Episode Title\",\n      field: \"title\",\n      wrapText: true,\n      autoHeight: true,\n      flex: 3,\n      resizable: false,\n    },\n    {\n      headerName: \"Published\",\n      field: \"pubDate\",\n      sortable: true,\n    },\n    {\n      headerName: \"Episode\",\n      field: \"mp3\",\n      autoHeight: true,\n      flex: 3,\n      cellRenderer: (params) => `<audio controls preload=\"none\">\n      <source src=${params.value} type=\"audio/mpeg\" />\n    </audio>`,\n    },\n    {\n      headerName: \"Description\",\n      field: \"description\",\n      autoHeight: true,\n      flex: 3,\n    },\n  ];\n  return (\n    <div\n      className=\"ag-theme-alpine\"\n      style={{ height: props.height, width: props.width }}\n    >\n      <h1>channelTitle</h1>\n      <AgGridReact rowData={rowData} columnDefs={columnDefs}></AgGridReact>\n    </div>\n  );\n}\n\nexport default PodcastGrid;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,2CAAP;AACA,OAAO,mDAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAC1B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACdO,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,GAAD,IAAS,IAAIC,MAAM,CAACC,SAAX,GAAuBC,eAAvB,CAAuCH,GAAvC,EAA4C,UAA5C,CAFjB,EAGGH,IAHH,CAGSO,IAAD,IAAU;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAACE,gBAAL,CAAsB,MAAtB,CAAjB;MACA,MAAMC,YAAY,GAAGH,IAAI,CAACI,OAAL,CAAaC,KAAlC;MACA,MAAMC,KAAK,GAAG,EAAd;MACAL,QAAQ,CAACM,OAAT,CAAkBC,CAAD,IAAO;QACtBF,KAAK,CAACG,IAAN,CAAW;UACTC,OAAO,EAAE,IAAIC,IAAJ,CAASH,CAAC,CAACI,aAAF,CAAgB,SAAhB,EAA2BC,WAApC,CADA;UAETR,KAAK,EAAEG,CAAC,CAACI,aAAF,CAAgB,OAAhB,EAAyBC,WAFvB;UAGTC,GAAG,EAAEN,CAAC,CAACI,aAAF,CAAgB,WAAhB,EAA6BG,YAA7B,CAA0C,KAA1C,CAHI;UAITC,WAAW,EAAER,CAAC,CAACI,aAAF,CAAgB,aAAhB,EAA+BC,WAJnC;UAKTI,KAAK,EAAET,CAAC,CAAC,EAAD;QALC,CAAX;MAOD,CARD;MASAlB,UAAU,CAACgB,KAAD,CAAV;IACD,CAjBH;EAkBD,CAnBQ,EAmBN,CAAClB,KAAK,CAACI,OAAP,CAnBM,CAAT;EAoBA,MAAM0B,UAAU,GAAG,CACjB;IACEC,UAAU,EAAE,OADd;IAEEC,KAAK,EAAE;EAFT,CADiB,EAKjB;IACED,UAAU,EAAE,eADd;IAEEC,KAAK,EAAE,OAFT;IAGEC,QAAQ,EAAE,IAHZ;IAIEC,UAAU,EAAE,IAJd;IAKEC,IAAI,EAAE,CALR;IAMEC,SAAS,EAAE;EANb,CALiB,EAajB;IACEL,UAAU,EAAE,WADd;IAEEC,KAAK,EAAE,SAFT;IAGEK,QAAQ,EAAE;EAHZ,CAbiB,EAkBjB;IACEN,UAAU,EAAE,SADd;IAEEC,KAAK,EAAE,KAFT;IAGEE,UAAU,EAAE,IAHd;IAIEC,IAAI,EAAE,CAJR;IAKEG,YAAY,EAAGC,MAAD,IAAa;AACjC,oBAAoBA,MAAM,CAACC,KAAM;AACjC;EAPI,CAlBiB,EA2BjB;IACET,UAAU,EAAE,aADd;IAEEC,KAAK,EAAE,aAFT;IAGEE,UAAU,EAAE,IAHd;IAIEC,IAAI,EAAE;EAJR,CA3BiB,CAAnB;EAkCA,oBACE;IACE,SAAS,EAAC,iBADZ;IAEE,KAAK,EAAE;MAAEM,MAAM,EAAEzC,KAAK,CAACyC,MAAhB;MAAwBC,KAAK,EAAE1C,KAAK,CAAC0C;IAArC,CAFT;IAAA,wBAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,WAAD;MAAa,OAAO,EAAEzC,OAAtB;MAA+B,UAAU,EAAE6B;IAA3C;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAlEQ/B,W;;KAAAA,W;AAoET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}