{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/AudioPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudoControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AudioPlayer(episodes) {\n  _s();\n\n  const [episodeIndex, setEpisodeIndex] = useState(0);\n  const [episodeProgress, setEpisodeProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [runTime, setRunTime] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [persistProgressIndex, setPersistProgressIndex] = useState(Number);\n  const [persistProgress, setPersistProgress] = useState([]);\n  let {\n    title,\n    author,\n    episodeImage,\n    sourceAudio\n  } = episodes.episodes[episodeIndex];\n  const audioRef = useRef(new Audio(sourceAudio));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n  const {\n    duration\n  } = audioRef.current;\n  const currentPercentage = duration ? `${episodeProgress / duration * 100}%` : \"0%\";\n  const remaining = duration ? new Date((duration - episodeProgress) * 1000).toISOString().slice(11, 19) : \"Not\";\n  const tempRunTime = duration ? new Date(duration * 1000).toISOString().slice(11, 9) : \"Ready\";\n  const trackStyling = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #777), color-stop(${currentPercentage}, #FFF))\n  `;\n\n  function findPersistIndex() {\n    const index = persistProgress.findIndex(object => {\n      return object.sourceAudio === sourceAudio;\n    });\n    setPersistProgressIndex(index);\n\n    if (index == -1) {\n      setPersistProgress([...persistProgress, {\n        title,\n        author,\n        episodeImage,\n        sourceAudio,\n        episodeProgress: 0\n      }]);\n    }\n\n    return index;\n  }\n\n  const toNextEpisode = () => {\n    setIsPlaying(false);\n\n    if (episodeIndex - 1 < 0) {\n      setEpisodeIndex(episodes.episodes.length - 1);\n    } else {\n      setEpisodeIndex(episodeIndex - 1);\n    }\n  };\n\n  const toPrevEpisode = () => {\n    setIsPlaying(false);\n    isReady.current = false;\n\n    if (episodeIndex < episodes.episodes.length - 1) {\n      setEpisodeIndex(episodeIndex + 1);\n    } else {\n      setEpisodeIndex(0);\n    }\n  };\n\n  const startTimer = () => {\n    clearInterval(intervalRef.current);\n    findPersistIndex();\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        setIsPlaying(false);\n        toNextEpisode();\n      } else {\n        const tempUpdatedPersist = persistProgress;\n        findPersistIndex();\n        tempUpdatedPersist[persistProgressIndex].episodeProgress = audioRef.current.currentTime;\n        setPersistProgress(tempUpdatedPersist);\n        setRemainingTime(remaining);\n        setEpisodeProgress(persistProgress[persistProgressIndex].episodeProgress);\n      }\n    }, [1000]);\n  };\n\n  const onScrub = value => {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    const tempUpdatedPersist = persistProgress;\n    tempUpdatedPersist[persistProgressIndex].episodeProgress = value;\n    setRemainingTime(remaining);\n    setEpisodeProgress(persistProgress[persistProgressIndex].episodeProgress);\n    setPersistProgress(tempUpdatedPersist);\n  };\n\n  const onScrubEnd = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n\n    startTimer();\n  };\n\n  useEffect(() => {\n    const checkIndex = findPersistIndex();\n\n    if (checkIndex != -1 && checkIndex != undefined) {\n      setPersistProgressIndex(checkIndex);\n      audioRef.current.currentTime = persistProgress[checkIndex].episodeProgress;\n    }\n  }, [episodeIndex, audioRef.current]);\n  useEffect(() => {\n    setRunTime(tempRunTime);\n\n    if (isPlaying) {\n      audioRef.current.play();\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  });\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  });\n  useEffect(() => {\n    audioRef.current.playbackRate = playbackRate;\n  }, [playbackRate]);\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(sourceAudio);\n    setPlaybackRate(1);\n    const checkIndex = findPersistIndex();\n\n    if (checkIndex != -1 && checkIndex != undefined) {\n      setPersistProgressIndex(checkIndex);\n      audioRef.current.currentTime = persistProgress[checkIndex].episodeProgress;\n      setRunTime(tempRunTime);\n    }\n\n    findPersistIndex();\n\n    if (isReady.current) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n      startTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [episodeIndex, episodes.episodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podcast-player\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"podcast-player-inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"episode-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"episode-poster\",\n          src: episodeImage,\n          alt: `Poster for ${title} episode by ${author}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"episode-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"author-text\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          value: episodeProgress,\n          step: \"1\",\n          min: \"0\",\n          max: duration ? duration : `${duration}`,\n          className: \"progress\",\n          onChange: e => onScrub(e.target.value),\n          onMouseUp: onScrubEnd,\n          onKeyUp: onScrubEnd,\n          style: {\n            background: trackStyling\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"runtime-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: isReady ? remainingTime : \"Media Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: runTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AudioControls, {\n          isPlaying: isPlaying,\n          onPrevClick: toPrevEpisode,\n          onNextClick: toNextEpisode,\n          onPlayPauseClick: setIsPlaying,\n          showNextButton: episodeIndex != 0,\n          changeSpeed: setPlaybackRate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"playback speed: \", playbackRate, \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AudioPlayer, \"SVvHkGln6SIMquvfUVMxHA7FlrA=\");\n\n_c = AudioPlayer;\nexport default AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","AudioPlayer","episodes","episodeIndex","setEpisodeIndex","episodeProgress","setEpisodeProgress","isPlaying","setIsPlaying","remainingTime","setRemainingTime","runTime","setRunTime","playbackRate","setPlaybackRate","persistProgressIndex","setPersistProgressIndex","Number","persistProgress","setPersistProgress","title","author","episodeImage","sourceAudio","audioRef","Audio","intervalRef","isReady","duration","current","currentPercentage","remaining","Date","toISOString","slice","tempRunTime","trackStyling","findPersistIndex","index","findIndex","object","toNextEpisode","length","toPrevEpisode","startTimer","clearInterval","setInterval","ended","tempUpdatedPersist","currentTime","onScrub","value","onScrubEnd","checkIndex","undefined","play","pause","e","target","background"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/AudioPlayer.jsx"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudoControls\";\n\nfunction AudioPlayer(episodes) {\n  const [episodeIndex, setEpisodeIndex] = useState(0);\n  const [episodeProgress, setEpisodeProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [runTime, setRunTime] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [persistProgressIndex, setPersistProgressIndex] = useState(Number);\n  const [persistProgress, setPersistProgress] = useState([]);\n\n  let { title, author, episodeImage, sourceAudio } =\n    episodes.episodes[episodeIndex];\n\n  const audioRef = useRef(new Audio(sourceAudio));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n\n  const { duration } = audioRef.current;\n  const currentPercentage = duration\n    ? `${(episodeProgress / duration) * 100}%`\n    : \"0%\";\n  const remaining = duration\n    ? new Date((duration - episodeProgress) * 1000).toISOString().slice(11, 19)\n    : \"Not\";\n\n  const tempRunTime = duration\n    ? new Date(duration * 1000).toISOString().slice(11, 9)\n    : \"Ready\";\n\n  const trackStyling = `\n    -webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${currentPercentage}, #777), color-stop(${currentPercentage}, #FFF))\n  `;\n\n  function findPersistIndex() {\n    const index = persistProgress.findIndex((object) => {\n      return object.sourceAudio === sourceAudio;\n    });\n\n    setPersistProgressIndex(index);\n\n    if (index == -1) {\n      setPersistProgress([\n        ...persistProgress,\n        { title, author, episodeImage, sourceAudio, episodeProgress: 0 },\n      ]);\n    }\n\n    return index;\n  }\n\n  const toNextEpisode = () => {\n    setIsPlaying(false);\n\n    if (episodeIndex - 1 < 0) {\n      setEpisodeIndex(episodes.episodes.length - 1);\n    } else {\n      setEpisodeIndex(episodeIndex - 1);\n    }\n  };\n\n  const toPrevEpisode = () => {\n    setIsPlaying(false);\n\n    isReady.current = false;\n\n    if (episodeIndex < episodes.episodes.length - 1) {\n      setEpisodeIndex(episodeIndex + 1);\n    } else {\n      setEpisodeIndex(0);\n    }\n  };\n\n  const startTimer = () => {\n    clearInterval(intervalRef.current);\n    findPersistIndex();\n\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        setIsPlaying(false);\n        toNextEpisode();\n      } else {\n        const tempUpdatedPersist = persistProgress;\n        findPersistIndex();\n        tempUpdatedPersist[persistProgressIndex].episodeProgress =\n          audioRef.current.currentTime;\n        setPersistProgress(tempUpdatedPersist);\n\n        setRemainingTime(remaining);\n        setEpisodeProgress(\n          persistProgress[persistProgressIndex].episodeProgress\n        );\n      }\n    }, [1000]);\n  };\n\n  const onScrub = (value) => {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    const tempUpdatedPersist = persistProgress;\n    tempUpdatedPersist[persistProgressIndex].episodeProgress = value;\n    setRemainingTime(remaining);\n    setEpisodeProgress(persistProgress[persistProgressIndex].episodeProgress);\n\n    setPersistProgress(tempUpdatedPersist);\n  };\n\n  const onScrubEnd = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n\n    startTimer();\n  };\n\n  useEffect(() => {\n    const checkIndex = findPersistIndex();\n\n    if (checkIndex != -1 && checkIndex != undefined) {\n      setPersistProgressIndex(checkIndex);\n      audioRef.current.currentTime =\n        persistProgress[checkIndex].episodeProgress;\n    }\n  }, [episodeIndex, audioRef.current]);\n\n  useEffect(() => {\n    setRunTime(tempRunTime);\n    if (isPlaying) {\n      audioRef.current.play();\n\n      startTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  });\n\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  });\n\n  useEffect(() => {\n    audioRef.current.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(sourceAudio);\n    setPlaybackRate(1);\n\n    const checkIndex = findPersistIndex();\n\n    if (checkIndex != -1 && checkIndex != undefined) {\n      setPersistProgressIndex(checkIndex);\n      audioRef.current.currentTime =\n        persistProgress[checkIndex].episodeProgress;\n        setRunTime(tempRunTime);\n    }\n\n    findPersistIndex();\n\n    if (isReady.current) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n\n      startTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [episodeIndex, episodes.episodes]);\n\n  return (\n    <div className=\"podcast-player\">\n      <div className=\"podcast-player-inner\">\n        <div className=\"episode-info\">\n          <img\n            className=\"episode-poster\"\n            src={episodeImage}\n            alt={`Poster for ${title} episode by ${author}`}\n          />\n          <h3 className=\"episode-title\">{title}</h3>\n          <h3 className=\"author-text\">{author}</h3>\n\n          <input\n            type=\"range\"\n            value={episodeProgress}\n            step=\"1\"\n            min=\"0\"\n            max={duration ? duration : `${duration}`}\n            className=\"progress\"\n            onChange={(e) => onScrub(e.target.value)}\n            onMouseUp={onScrubEnd}\n            onKeyUp={onScrubEnd}\n            style={{ background: trackStyling }}\n          />\n          <div className=\"runtime-display\">\n            <p>{isReady ? remainingTime : \"Media Loading\"}</p>\n            <p>{runTime}</p>\n          </div>\n          <AudioControls\n            isPlaying={isPlaying}\n            onPrevClick={toPrevEpisode}\n            onNextClick={toNextEpisode}\n            onPlayPauseClick={setIsPlaying}\n            showNextButton={episodeIndex != 0}\n            changeSpeed={setPlaybackRate}\n          />\n          <p>playback speed: {playbackRate}x</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AudioPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}