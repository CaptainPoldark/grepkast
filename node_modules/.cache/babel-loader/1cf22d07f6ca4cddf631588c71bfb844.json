{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport PodcastGrid from \"./PodcastGrid\";\nimport PodcastPlayer from \"./PodcastPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [rssFeed, setRssFeed] = useState(\"https://anchor.fm/s/2fa50a94/podcast/rss\");\n  const [rssList, setRssList] = useState({\n    feeds: [{\n      name: \"LTT\",\n      url: \"https://anchor.fm/s/3cbbb3b8/podcast/rss\"\n    }, {\n      name: \"Valuetainment\",\n      url: \"https://anchor.fm/s/2714310c/podcast/rss\"\n    }, {\n      name: \"PBD Podcast\",\n      url: \"https://anchor.fm/s/2fa50a94/podcast/rss\"\n    }]\n  });\n  const [tempRSSName, setTempRSSName] = useState();\n  const [tempRSSURL, setTempRSSURL] = useState();\n\n  const handleAddFeed = () => {\n    const newRssList = rssList;\n    newRssList.feeds = [...newRssList.feeds, {\n      name: tempRSSName,\n      url: tempRSSURL\n    }];\n    setRssList(newRssList);\n  };\n\n  const handleLoadFeedClick = inputRssFeed => {\n    setRssFeed(inputRssFeed);\n  };\n\n  const handleInputChange = event => {\n    if (event.target.id == \"rssFeedName\") {\n      setTempRSSName(event.target.value);\n    }\n\n    if (event.target.id == \"rssFeedUrl\") {\n      handleLoadFeedClick(event.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddFeed,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rssFeedUrl\",\n          children: \"RSS Feed Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"rssFeedName\",\n          name: \"rssFeedUrl\",\n          style: {\n            width: \"80%\"\n          },\n          value: tempRSSName,\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rssFeedUrl\",\n          children: \"RSS Feed URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"rssFeedUrl\",\n          name: \"rssFeedUrl\",\n          style: {\n            width: \"80%\"\n          },\n          value: tempRSSURL,\n          onChange: e => setTempRSSURL(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), rssList.feeds.map(_ref => {\n        let {\n          name,\n          url\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          value: url,\n          onClick: e => handleInputChange(e),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PodcastPlayer, {\n      rssfeed: rssFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B8dPsltKgdpuI/xydqs0fmkzb9c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PodcastGrid","PodcastPlayer","App","rssFeed","setRssFeed","rssList","setRssList","feeds","name","url","tempRSSName","setTempRSSName","tempRSSURL","setTempRSSURL","handleAddFeed","newRssList","handleLoadFeedClick","inputRssFeed","handleInputChange","event","target","id","value","width","e","map"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/App.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport PodcastGrid from \"./PodcastGrid\";\nimport PodcastPlayer from \"./PodcastPlayer\";\n\nfunction App() {\n  const [rssFeed, setRssFeed] = useState(\n    \"https://anchor.fm/s/2fa50a94/podcast/rss\"\n  );\n  const [rssList, setRssList] = useState({\n    feeds: [\n      { name: \"LTT\", url: \"https://anchor.fm/s/3cbbb3b8/podcast/rss\" },\n      {\n        name: \"Valuetainment\",\n        url: \"https://anchor.fm/s/2714310c/podcast/rss\",\n      },\n      { name: \"PBD Podcast\", url: \"https://anchor.fm/s/2fa50a94/podcast/rss\" },\n    ],\n  });\n  const [tempRSSName, setTempRSSName] = useState();\n  const [tempRSSURL, setTempRSSURL] = useState();\n\n  const handleAddFeed = () => {\n    const newRssList = rssList;\n    newRssList.feeds = [\n      ...newRssList.feeds,\n      { name: tempRSSName, url: tempRSSURL },\n    ];\n    setRssList(newRssList);\n  };\n\n  const handleLoadFeedClick = (inputRssFeed) => {\n    setRssFeed(inputRssFeed);\n  };\n\n  const handleInputChange = (event) => {\n    if (event.target.id == \"rssFeedName\") {\n      setTempRSSName(event.target.value);\n    }\n    if (event.target.id == \"rssFeedUrl\") {\n      handleLoadFeedClick(event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <form onSubmit={handleAddFeed}>\n          <label htmlFor=\"rssFeedUrl\">RSS Feed Name:</label>\n          <input\n            type=\"text\"\n            id=\"rssFeedName\"\n            name=\"rssFeedUrl\"\n            style={{ width: \"80%\" }}\n            value={tempRSSName}\n            onChange={(e) => handleInputChange(e)}\n          />\n          <label htmlFor=\"rssFeedUrl\">RSS Feed URL:</label>\n          <input\n            type=\"text\"\n            id=\"rssFeedUrl\"\n            name=\"rssFeedUrl\"\n            style={{ width: \"80%\" }}\n            value={tempRSSURL}\n            onChange={(e) => setTempRSSURL(e.target.value)}\n          />\n          <input type=\"submit\" value=\"Add Feed\" />\n        </form>\n        {rssList.feeds.map(({ name, url }) => (\n          <button value={url} onClick={(e) => handleInputChange(e)}>\n            {name}\n          </button>\n        ))}\n      </div>\n\n      {\n        // <PodcastGrid rssfeed={rssFeed} height=\"50vh\" weight=\"100%\"></PodcastGrid>\n      }\n      <PodcastPlayer rssfeed={rssFeed}></PodcastPlayer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}