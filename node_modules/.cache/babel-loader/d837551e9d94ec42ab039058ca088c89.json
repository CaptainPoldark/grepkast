{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport PodcastGrid from \"./PodcastGrid\";\nimport PodcastPlayer from \"./PodcastPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [rssFeed, setRssFeed] = useState(\"https://anchor.fm/s/2fa50a94/podcast/rss\");\n  const [rssList, setRssList] = useState({\n    feeds: [{\n      name: \"LTT\",\n      url: \"https://anchor.fm/s/3cbbb3b8/podcast/rss\"\n    }, {\n      name: \"Valuetainment\",\n      url: \"https://anchor.fm/s/2714310c/podcast/rss\"\n    }, {\n      name: \"PBD Podcast\",\n      url: \"https://anchor.fm/s/2fa50a94/podcast/rss\"\n    }]\n  });\n\n  const handleLoadFeedClick = inputRssFeed => {\n    setRssFeed(inputRssFeed);\n  };\n\n  const RssListButtons = () => rssList.feeds.map(_ref => {\n    let {\n      name,\n      url\n    } = _ref;\n\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        value: url,\n        onClick: e => handleLoadFeedClick(e.target.value),\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rssFeedUrl\",\n        children: \"RSS Feed URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"rssFeedUrl\",\n        name: \"rssFeedUrl\",\n        style: {\n          width: \"80%\"\n        },\n        defaultValue: rssFeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleLoadFeedClick(e.target.value),\n        children: \"Load Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), rssList.feeds.map(_ref2 => {\n        let {\n          name,\n          url\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          value: url,\n          onClick: e => handleLoadFeedClick(e.target.value),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PodcastPlayer, {\n      rssfeed: rssFeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mjnZKqcVZuiQxTaSAmJuxqbHPjk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PodcastGrid","PodcastPlayer","App","rssFeed","setRssFeed","rssList","setRssList","feeds","name","url","handleLoadFeedClick","inputRssFeed","RssListButtons","map","e","target","value","width"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/App.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport PodcastGrid from \"./PodcastGrid\";\nimport PodcastPlayer from \"./PodcastPlayer\";\n\nfunction App() {\n  const [rssFeed, setRssFeed] = useState(\n    \"https://anchor.fm/s/2fa50a94/podcast/rss\"\n  );\n  const [rssList, setRssList] = useState({\n    feeds: [\n      { name: \"LTT\", url: \"https://anchor.fm/s/3cbbb3b8/podcast/rss\" },\n      {\n        name: \"Valuetainment\",\n        url: \"https://anchor.fm/s/2714310c/podcast/rss\",\n      },\n      { name: \"PBD Podcast\", url: \"https://anchor.fm/s/2fa50a94/podcast/rss\" },\n    ],\n  });\n\n  const handleLoadFeedClick = (inputRssFeed) => {\n    setRssFeed(inputRssFeed);\n  };\n\n  const RssListButtons = () =>\n    rssList.feeds.map(({ name, url }) => {\n      <>\n        <button\n          value={url}\n          onClick={(e) => handleLoadFeedClick(e.target.value)}\n        >\n          {name}\n        </button>\n      </>;\n    });\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"rssFeedUrl\">RSS Feed URL:</label>\n        <input\n          type=\"text\"\n          id=\"rssFeedUrl\"\n          name=\"rssFeedUrl\"\n          style={{ width: \"80%\" }}\n          defaultValue={rssFeed}\n        />\n        <button onClick={(e) => handleLoadFeedClick(e.target.value)}>\n          Load Feed\n        </button>\n        {rssList.feeds.map(({ name, url }) => (\n          <button\n            value={url}\n            onClick={(e) => handleLoadFeedClick(e.target.value)}\n          >\n            {name}\n          </button>\n        ))}\n      </div>\n\n      {\n        // <PodcastGrid rssfeed={rssFeed} height=\"50vh\" weight=\"100%\"></PodcastGrid>\n      }\n      <PodcastPlayer rssfeed={rssFeed}></PodcastPlayer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CACpC,0CADoC,CAAtC;EAGA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;IACrCQ,KAAK,EAAE,CACL;MAAEC,IAAI,EAAE,KAAR;MAAeC,GAAG,EAAE;IAApB,CADK,EAEL;MACED,IAAI,EAAE,eADR;MAEEC,GAAG,EAAE;IAFP,CAFK,EAML;MAAED,IAAI,EAAE,aAAR;MAAuBC,GAAG,EAAE;IAA5B,CANK;EAD8B,CAAD,CAAtC;;EAWA,MAAMC,mBAAmB,GAAIC,YAAD,IAAkB;IAC5CP,UAAU,CAACO,YAAD,CAAV;EACD,CAFD;;EAIA,MAAMC,cAAc,GAAG,MACrBP,OAAO,CAACE,KAAR,CAAcM,GAAd,CAAkB,QAAmB;IAAA,IAAlB;MAAEL,IAAF;MAAQC;IAAR,CAAkB;;IACnC;IAAA;MAAA,uBACE;QACE,KAAK,EAAEA,GADT;QAEE,OAAO,EAAGK,CAAD,IAAOJ,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAFrC;QAAA,UAIGR;MAJH;QAAA;QAAA;QAAA;MAAA;IADF;EAQD,CATD,CADF;;EAWA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,wBACE;QAAO,OAAO,EAAC,YAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,YAFL;QAGE,IAAI,EAAC,YAHP;QAIE,KAAK,EAAE;UAAES,KAAK,EAAE;QAAT,CAJT;QAKE,YAAY,EAAEd;MALhB;QAAA;QAAA;QAAA;MAAA,QAFF,eASE;QAAQ,OAAO,EAAGW,CAAD,IAAOJ,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,EAYGX,OAAO,CAACE,KAAR,CAAcM,GAAd,CAAkB;QAAA,IAAC;UAAEL,IAAF;UAAQC;QAAR,CAAD;QAAA,oBACjB;UACE,KAAK,EAAEA,GADT;UAEE,OAAO,EAAGK,CAAD,IAAOJ,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAFrC;UAAA,UAIGR;QAJH;UAAA;UAAA;UAAA;QAAA,QADiB;MAAA,CAAlB,CAZH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eA0BE,QAAC,aAAD;MAAe,OAAO,EAAEL;IAAxB;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GA5DQD,G;;KAAAA,G;AA8DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}