{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PodcastPlayer(props) {\n  _s();\n\n  const [playerState, setPlayerState] = useState([]);\n  const audioElement = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [nextSongIndex, setNextSongIndex] = useState(currentSongIndex + 1);\n  useEffect(() => {\n    fetch(props.rssfeed).then(response => response.text()).then(str => new window.DOMParser().parseFromString(str, \"text/xml\")).then(data => {\n      const itemList = data.querySelectorAll(\"item\");\n      let html = ``;\n      const items = [];\n      itemList.forEach(e => {\n        items.push({\n          pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n          title: e.querySelector(\"title\").textContent,\n          sourceAudio: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n          description: e.querySelector(\"description\").textContent,\n          episodeImage: e.childNodes[21].attributes.href.value\n        });\n      });\n      setPlayerState(items);\n    });\n  }, [props.rssfeed]);\n  useEffect(() => {\n    if (isPlaying) {\n      audioElement.current.play();\n    } else {\n      audioElement.current.pause();\n    }\n  });\n\n  const SkipControl = function () {\n    let forwards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (forwards) {\n      setCurrentSongIndex(() => {\n        let temp = currentSongIndex;\n        temp++;\n\n        if (temp > playerState.length - 1) {\n          temp = 0;\n        }\n\n        return temp;\n      });\n    } else {\n      props.setCurrentSongIndex(() => {\n        let temp = currentSongIndex;\n        temp--;\n\n        if (temp < 0) {\n          temp = playerState.length - 1;\n        }\n\n        return temp;\n      });\n    }\n  };\n\n  console.log(playerState);\n  let playerDisplay = playerState.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [e.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), e.sourceAudio, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), JSON.stringify(e.pubDate), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), e.episodeImage, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this));\n  return playerState.length == 0 ? \"Player loading\" : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"podcastPlayer\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Previous Podcast:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: playerState[nextSongIndex].episodeImage,\n      style: {\n        width: \"4em\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PodcastPlayer, \"R1UFBOPJYZX+FtdDyQSJeGxoIsA=\");\n\n_c = PodcastPlayer;\nexport default PodcastPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PodcastPlayer","props","playerState","setPlayerState","audioElement","isPlaying","setIsPlaying","currentSongIndex","setCurrentSongIndex","nextSongIndex","setNextSongIndex","fetch","rssfeed","then","response","text","str","window","DOMParser","parseFromString","data","itemList","querySelectorAll","html","items","forEach","e","push","pubDate","Date","querySelector","textContent","title","sourceAudio","getAttribute","description","episodeImage","childNodes","attributes","href","value","current","play","pause","SkipControl","forwards","temp","length","console","log","playerDisplay","map","JSON","stringify","width","height"],"sources":["/home/jbrooks/Documents/School/otherProjects/Podcast-App/podcast-app/src/PodcastPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction PodcastPlayer(props) {\n  const [playerState, setPlayerState] = useState([]);\n  const audioElement = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [nextSongIndex, setNextSongIndex] = useState(currentSongIndex + 1);\n\n  useEffect(() => {\n    fetch(props.rssfeed)\n      .then((response) => response.text())\n      .then((str) => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        const itemList = data.querySelectorAll(\"item\");\n        let html = ``;\n        const items = [];\n        itemList.forEach((e) => {\n          items.push({\n            pubDate: new Date(e.querySelector(\"pubDate\").textContent),\n            title: e.querySelector(\"title\").textContent,\n            sourceAudio: e.querySelector(\"enclosure\").getAttribute(\"url\"),\n            description: e.querySelector(\"description\").textContent,\n            episodeImage: e.childNodes[21].attributes.href.value,\n          });\n        });\n        setPlayerState(items);\n      });\n  }, [props.rssfeed]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioElement.current.play();\n    } else {\n      audioElement.current.pause();\n    }\n  });\n\n  const SkipControl = (forwards = true) => {\n    if (forwards) {\n      setCurrentSongIndex(() => {\n        let temp = currentSongIndex;\n        temp++;\n\n        if (temp > playerState.length - 1) {\n          temp = 0;\n        }\n        return temp;\n      });\n    } else {\n      props.setCurrentSongIndex(() => {\n        let temp = currentSongIndex;\n        temp--;\n\n        if (temp < 0) {\n          temp = playerState.length - 1;\n        }\n        return temp;\n      });\n    }\n  };\n  console.log(playerState);\n\n  let playerDisplay = playerState.map((e) => (\n    <div>\n      {e.title}\n      <br />\n      {e.sourceAudio}\n      <br />\n      {JSON.stringify(e.pubDate)}\n      <br />\n      {e.episodeImage}\n      <br />\n      <br />\n    </div>\n  ));\n\n  return playerState.length == 0 ? (\n    \"Player loading\"\n  ) : (\n    <div>\n      podcastPlayer\n      <br />\n      <strong>Previous Podcast:</strong>\n      <img\n        src={playerState[nextSongIndex].episodeImage}\n        style={{ width: \"4em\", height: \"auto\" }}\n      />\n    </div>\n  );\n}\n\nexport default PodcastPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}