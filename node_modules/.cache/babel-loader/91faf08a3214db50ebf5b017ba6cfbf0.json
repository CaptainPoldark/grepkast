{"ast":null,"code":"// ag-grid-react v26.0.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar agGridColumn_1 = require(\"./agGridColumn\");\n\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\n\nvar legacyReactComponent_1 = require(\"./legacyReactComponent\");\n\nvar newReactComponent_1 = require(\"./newReactComponent\");\n\nvar AgGridReactLegacy =\n/** @class */\nfunction (_super) {\n  __extends(AgGridReactLegacy, _super);\n\n  function AgGridReactLegacy(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.props = props;\n    _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n    _this.api = null;\n    _this.portals = [];\n    _this.hasPendingPortalUpdate = false;\n    _this.destroyed = false;\n    _this.SYNCHRONOUS_CHANGE_PROPERTIES = ['context'];\n    return _this;\n  }\n\n  AgGridReactLegacy.prototype.render = function () {\n    var _this = this;\n\n    return react_1.default.createElement('div', {\n      style: this.createStyleForDiv(),\n      className: this.props.className,\n      ref: function (e) {\n        _this.eGridDiv = e;\n      }\n    }, this.portals);\n  };\n\n  AgGridReactLegacy.prototype.createStyleForDiv = function () {\n    return __assign({\n      height: '100%'\n    }, this.props.containerStyle || {});\n  };\n\n  AgGridReactLegacy.prototype.componentDidMount = function () {\n    var modules = this.props.modules || [];\n    var gridParams = {\n      providedBeanInstances: {\n        agGridReact: this,\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n      },\n      modules: modules\n    };\n    var gridOptions = this.props.gridOptions || {};\n    var children = this.props.children;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n      gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n    }\n\n    this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props); // don't need the return value\n\n    new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n    this.api = this.gridOptions.api;\n    this.columnApi = this.gridOptions.columnApi;\n    this.props.setGridApi(this.api, this.columnApi);\n  };\n\n  AgGridReactLegacy.prototype.waitForInstance = function (reactComponent, resolve, startTime) {\n    var _this = this;\n\n    if (startTime === void 0) {\n      startTime = Date.now();\n    } // if the grid has been destroyed in the meantime just resolve\n\n\n    if (this.destroyed) {\n      resolve(null);\n      return;\n    }\n\n    if (reactComponent.rendered()) {\n      resolve(reactComponent);\n    } else {\n      if (Date.now() - startTime >= this.props.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {\n        // last check - we check if this is a null value being rendered - we do this last as using SSR to check the value\n        // can mess up contexts\n        if (reactComponent.isNullValue()) {\n          resolve(reactComponent);\n          return;\n        }\n\n        console.error(\"AG Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS + \"ms\");\n        return;\n      }\n\n      window.setTimeout(function () {\n        _this.waitForInstance(reactComponent, resolve, startTime);\n      });\n    }\n  };\n  /**\n   * Mounts a react portal for components registered under the componentFramework.\n   * We do this because we want all portals to be in the same tree - in order to get\n   * Context to work properly.\n   */\n\n\n  AgGridReactLegacy.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n    this.portals = __spreadArrays(this.portals, [portal]);\n    this.waitForInstance(reactComponent, resolve);\n    this.batchUpdate();\n  };\n\n  AgGridReactLegacy.prototype.updateReactPortal = function (oldPortal, newPortal) {\n    this.portals[this.portals.indexOf(oldPortal)] = newPortal;\n    this.batchUpdate();\n  };\n\n  AgGridReactLegacy.prototype.batchUpdate = function () {\n    var _this = this;\n\n    if (this.hasPendingPortalUpdate) {\n      return;\n    }\n\n    setTimeout(function () {\n      if (_this.api) {\n        // destroyed?\n        _this.forceUpdate(function () {\n          _this.hasPendingPortalUpdate = false;\n        });\n      }\n    });\n    this.hasPendingPortalUpdate = true;\n  };\n\n  AgGridReactLegacy.prototype.destroyPortal = function (portal) {\n    this.portals = this.portals.filter(function (curPortal) {\n      return curPortal !== portal;\n    });\n    this.batchUpdate();\n  };\n\n  AgGridReactLegacy.prototype.getStrategyTypeForProp = function (propKey) {\n    if (propKey === 'rowData') {\n      if (this.props.rowDataChangeDetectionStrategy) {\n        return this.props.rowDataChangeDetectionStrategy;\n      } else if (this.isImmutableDataActive()) {\n        return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n      }\n    } // all other cases will default to DeepValueCheck\n\n\n    return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n  };\n\n  AgGridReactLegacy.prototype.isImmutableDataActive = function () {\n    return this.props.deltaRowDataMode || this.props.immutableData || this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData);\n  };\n\n  AgGridReactLegacy.prototype.shouldComponentUpdate = function (nextProps) {\n    this.processPropsChanges(this.props, nextProps); // we want full control of the dom, as AG Grid doesn't use React internally,\n    // so for performance reasons we tell React we don't need render called after\n    // property changes.\n\n    return false;\n  };\n\n  AgGridReactLegacy.prototype.componentDidUpdate = function (prevProps) {\n    this.processPropsChanges(prevProps, this.props);\n  };\n\n  AgGridReactLegacy.prototype.processPropsChanges = function (prevProps, nextProps) {\n    var changes = {};\n    this.extractGridPropertyChanges(prevProps, nextProps, changes);\n    this.extractDeclarativeColDefChanges(nextProps, changes);\n    this.processSynchronousChanges(changes);\n    this.processAsynchronousChanges(changes);\n  };\n\n  AgGridReactLegacy.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n    // if columnDefs are provided on gridOptions we use those - you can't combine both\n    // we also skip if columnDefs are provided as a prop directly on AgGridReact\n    if (this.props.gridOptions && this.props.gridOptions.columnDefs || this.props.columnDefs) {\n      return;\n    }\n\n    var debugLogging = !!nextProps.debug;\n    var propKey = 'columnDefs';\n    var currentColDefs = this.gridOptions.columnDefs;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n      var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n      var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n\n      if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n        if (debugLogging) {\n          console.log(\"agGridReact: colDefs definitions changed\");\n        }\n\n        changes[propKey] = {\n          previousValue: currentColDefs,\n          currentValue: newColDefs\n        };\n      }\n    } else if (currentColDefs && currentColDefs.length > 0) {\n      changes[propKey] = {\n        previousValue: currentColDefs,\n        currentValue: []\n      };\n    }\n  };\n\n  AgGridReactLegacy.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n    var _this = this;\n\n    var debugLogging = !!nextProps.debug;\n    Object.keys(nextProps).forEach(function (propKey) {\n      if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n        var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n\n        if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n          if (debugLogging) {\n            console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n          }\n\n          changes[propKey] = {\n            previousValue: prevProps[propKey],\n            currentValue: nextProps[propKey]\n          };\n        }\n      }\n    });\n    ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      var propsAny = _this.props;\n\n      if (propsAny[funcName] !== nextProps[funcName]) {\n        if (debugLogging) {\n          console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n        }\n\n        changes[funcName] = {\n          previousValue: prevProps[funcName],\n          currentValue: nextProps[funcName]\n        };\n      }\n    });\n  };\n\n  AgGridReactLegacy.prototype.componentWillUnmount = function () {\n    if (this.api) {\n      this.api.destroy();\n      this.api = null;\n    }\n\n    this.destroyed = true;\n  };\n\n  AgGridReactLegacy.prototype.isDisableStaticMarkup = function () {\n    return this.props.disableStaticMarkup === true;\n  };\n\n  AgGridReactLegacy.prototype.isLegacyComponentRendering = function () {\n    return this.props.legacyComponentRendering === true;\n  };\n\n  AgGridReactLegacy.prototype.processSynchronousChanges = function (changes) {\n    var asyncChanges = __assign({}, changes);\n\n    if (Object.keys(asyncChanges).length > 0) {\n      var synchronousChanges_1 = {};\n      this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach(function (synchronousChangeProperty) {\n        if (asyncChanges[synchronousChangeProperty]) {\n          synchronousChanges_1[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\n          delete asyncChanges[synchronousChangeProperty];\n        }\n      });\n\n      if (Object.keys(synchronousChanges_1).length > 0 && !!this.api) {\n        ag_grid_community_1.ComponentUtil.processOnChange(synchronousChanges_1, this.gridOptions, this.api, this.columnApi);\n      }\n    }\n\n    return asyncChanges;\n  };\n\n  AgGridReactLegacy.prototype.processAsynchronousChanges = function (changes) {\n    var _this = this;\n\n    if (Object.keys(changes).length > 0) {\n      window.setTimeout(function () {\n        // destroyed?\n        if (_this.api) {\n          ag_grid_community_1.ComponentUtil.processOnChange(changes, _this.gridOptions, _this.api, _this.columnApi);\n        }\n      });\n    }\n  };\n\n  AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\n\n  AgGridReactLegacy.defaultProps = {\n    legacyComponentRendering: false,\n    disableStaticMarkup: false,\n    maxComponentCreationTimeMs: AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS\n  };\n  return AgGridReactLegacy;\n}(react_1.Component);\n\nexports.AgGridReactLegacy = AgGridReactLegacy;\nAgGridReactLegacy.propTypes = {\n  gridOptions: prop_types_1.default.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), prop_types_1.default.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, prop_types_1.default.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, prop_types_1.default.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, prop_types_1.default.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, prop_types_1.default.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, prop_types_1.default.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, prop_types_1.default.func);\n\nfunction addProperties(listOfProps, propType) {\n  listOfProps.forEach(function (propKey) {\n    AgGridReactLegacy[propKey] = propType;\n  });\n}\n\nvar ReactFrameworkComponentWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ReactFrameworkComponentWrapper, _super);\n\n  function ReactFrameworkComponentWrapper(agGridReact) {\n    var _this = _super.call(this) || this;\n\n    _this.agGridReact = agGridReact;\n    return _this;\n  }\n\n  ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n    return this.agGridReact.isLegacyComponentRendering() ? new legacyReactComponent_1.LegacyReactComponent(UserReactComponent, this.agGridReact, componentType) : new newReactComponent_1.NewReactComponent(UserReactComponent, this.agGridReact, componentType);\n  };\n\n  return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper);","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__spreadArrays","il","r","k","a","j","jl","__importStar","mod","__esModule","result","__importDefault","defineProperty","exports","value","react_1","require","prop_types_1","ag_grid_community_1","agGridColumn_1","changeDetectionService_1","legacyReactComponent_1","newReactComponent_1","AgGridReactLegacy","_super","props","_this","changeDetectionService","ChangeDetectionService","api","portals","hasPendingPortalUpdate","destroyed","SYNCHRONOUS_CHANGE_PROPERTIES","render","default","createElement","style","createStyleForDiv","className","ref","e","eGridDiv","height","containerStyle","componentDidMount","modules","gridParams","providedBeanInstances","agGridReact","frameworkComponentWrapper","ReactFrameworkComponentWrapper","gridOptions","children","AgGridColumn","hasChildColumns","columnDefs","mapChildColumnDefs","ComponentUtil","copyAttributesToGridOptions","Grid","columnApi","setGridApi","waitForInstance","reactComponent","resolve","startTime","Date","now","rendered","maxComponentCreationTimeMs","isNullValue","console","error","getReactComponentName","MAX_COMPONENT_CREATION_TIME_IN_MS","window","setTimeout","mountReactPortal","portal","batchUpdate","updateReactPortal","oldPortal","newPortal","indexOf","forceUpdate","destroyPortal","filter","curPortal","getStrategyTypeForProp","propKey","rowDataChangeDetectionStrategy","isImmutableDataActive","ChangeDetectionStrategyType","IdentityCheck","DeepValueCheck","deltaRowDataMode","immutableData","shouldComponentUpdate","nextProps","processPropsChanges","componentDidUpdate","prevProps","changes","extractGridPropertyChanges","extractDeclarativeColDefChanges","processSynchronousChanges","processAsynchronousChanges","debugLogging","debug","currentColDefs","detectionStrategy","getStrategy","newColDefs","areEqual","log","previousValue","currentValue","keys","forEach","_","includes","ALL_PROPERTIES","changeDetectionStrategy","getEventCallbacks","funcName","propsAny","componentWillUnmount","destroy","isDisableStaticMarkup","disableStaticMarkup","isLegacyComponentRendering","legacyComponentRendering","asyncChanges","synchronousChanges_1","synchronousChangeProperty","processOnChange","defaultProps","Component","propTypes","object","addProperties","func","BOOLEAN_PROPERTIES","bool","STRING_PROPERTIES","string","OBJECT_PROPERTIES","ARRAY_PROPERTIES","array","NUMBER_PROPERTIES","number","FUNCTION_PROPERTIES","listOfProps","propType","createWrapper","UserReactComponent","componentType","LegacyReactComponent","NewReactComponent","BaseComponentWrapper"],"sources":["/home/jbrooks/Documents/School/otherProjects/node_modules/ag-grid-react/lib/agGridReactLegacy.js"],"sourcesContent":["// ag-grid-react v26.0.0\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importStar(require(\"react\"));\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar agGridColumn_1 = require(\"./agGridColumn\");\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\nvar legacyReactComponent_1 = require(\"./legacyReactComponent\");\nvar newReactComponent_1 = require(\"./newReactComponent\");\nvar AgGridReactLegacy = /** @class */ (function (_super) {\n    __extends(AgGridReactLegacy, _super);\n    function AgGridReactLegacy(props) {\n        var _this = _super.call(this, props) || this;\n        _this.props = props;\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n        _this.api = null;\n        _this.portals = [];\n        _this.hasPendingPortalUpdate = false;\n        _this.destroyed = false;\n        _this.SYNCHRONOUS_CHANGE_PROPERTIES = ['context'];\n        return _this;\n    }\n    AgGridReactLegacy.prototype.render = function () {\n        var _this = this;\n        return react_1.default.createElement('div', {\n            style: this.createStyleForDiv(),\n            className: this.props.className,\n            ref: function (e) {\n                _this.eGridDiv = e;\n            }\n        }, this.portals);\n    };\n    AgGridReactLegacy.prototype.createStyleForDiv = function () {\n        return __assign({ height: '100%' }, (this.props.containerStyle || {}));\n    };\n    AgGridReactLegacy.prototype.componentDidMount = function () {\n        var modules = this.props.modules || [];\n        var gridParams = {\n            providedBeanInstances: {\n                agGridReact: this,\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n            },\n            modules: modules\n        };\n        var gridOptions = this.props.gridOptions || {};\n        var children = this.props.children;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n            gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n        }\n        this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n        // don't need the return value\n        new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n        this.props.setGridApi(this.api, this.columnApi);\n    };\n    AgGridReactLegacy.prototype.waitForInstance = function (reactComponent, resolve, startTime) {\n        var _this = this;\n        if (startTime === void 0) { startTime = Date.now(); }\n        // if the grid has been destroyed in the meantime just resolve\n        if (this.destroyed) {\n            resolve(null);\n            return;\n        }\n        if (reactComponent.rendered()) {\n            resolve(reactComponent);\n        }\n        else {\n            if (Date.now() - startTime >= this.props.maxComponentCreationTimeMs && !this.hasPendingPortalUpdate) {\n                // last check - we check if this is a null value being rendered - we do this last as using SSR to check the value\n                // can mess up contexts\n                if (reactComponent.isNullValue()) {\n                    resolve(reactComponent);\n                    return;\n                }\n                console.error(\"AG Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS + \"ms\");\n                return;\n            }\n            window.setTimeout(function () {\n                _this.waitForInstance(reactComponent, resolve, startTime);\n            });\n        }\n    };\n    /**\n     * Mounts a react portal for components registered under the componentFramework.\n     * We do this because we want all portals to be in the same tree - in order to get\n     * Context to work properly.\n     */\n    AgGridReactLegacy.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n        this.portals = __spreadArrays(this.portals, [portal]);\n        this.waitForInstance(reactComponent, resolve);\n        this.batchUpdate();\n    };\n    AgGridReactLegacy.prototype.updateReactPortal = function (oldPortal, newPortal) {\n        this.portals[this.portals.indexOf(oldPortal)] = newPortal;\n        this.batchUpdate();\n    };\n    AgGridReactLegacy.prototype.batchUpdate = function () {\n        var _this = this;\n        if (this.hasPendingPortalUpdate) {\n            return;\n        }\n        setTimeout(function () {\n            if (_this.api) { // destroyed?\n                _this.forceUpdate(function () {\n                    _this.hasPendingPortalUpdate = false;\n                });\n            }\n        });\n        this.hasPendingPortalUpdate = true;\n    };\n    AgGridReactLegacy.prototype.destroyPortal = function (portal) {\n        this.portals = this.portals.filter(function (curPortal) { return curPortal !== portal; });\n        this.batchUpdate();\n    };\n    AgGridReactLegacy.prototype.getStrategyTypeForProp = function (propKey) {\n        if (propKey === 'rowData') {\n            if (this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            else if (this.isImmutableDataActive()) {\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n        // all other cases will default to DeepValueCheck\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n    };\n    AgGridReactLegacy.prototype.isImmutableDataActive = function () {\n        return (this.props.deltaRowDataMode || this.props.immutableData) ||\n            (this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData));\n    };\n    AgGridReactLegacy.prototype.shouldComponentUpdate = function (nextProps) {\n        this.processPropsChanges(this.props, nextProps);\n        // we want full control of the dom, as AG Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    };\n    AgGridReactLegacy.prototype.componentDidUpdate = function (prevProps) {\n        this.processPropsChanges(prevProps, this.props);\n    };\n    AgGridReactLegacy.prototype.processPropsChanges = function (prevProps, nextProps) {\n        var changes = {};\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n        this.processSynchronousChanges(changes);\n        this.processAsynchronousChanges(changes);\n    };\n    AgGridReactLegacy.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n        // if columnDefs are provided on gridOptions we use those - you can't combine both\n        // we also skip if columnDefs are provided as a prop directly on AgGridReact\n        if ((this.props.gridOptions && this.props.gridOptions.columnDefs) || this.props.columnDefs) {\n            return;\n        }\n        var debugLogging = !!nextProps.debug;\n        var propKey = 'columnDefs';\n        var currentColDefs = this.gridOptions.columnDefs;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n            var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: colDefs definitions changed\");\n                }\n                changes[propKey] =\n                    {\n                        previousValue: currentColDefs,\n                        currentValue: newColDefs\n                    };\n            }\n        }\n        else if (currentColDefs && currentColDefs.length > 0) {\n            changes[propKey] =\n                {\n                    previousValue: currentColDefs,\n                    currentValue: []\n                };\n        }\n    };\n    AgGridReactLegacy.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n        var _this = this;\n        var debugLogging = !!nextProps.debug;\n        Object.keys(nextProps).forEach(function (propKey) {\n            if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n                    }\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            var propsAny = _this.props;\n            if (propsAny[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n                }\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    };\n    AgGridReactLegacy.prototype.componentWillUnmount = function () {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n        this.destroyed = true;\n    };\n    AgGridReactLegacy.prototype.isDisableStaticMarkup = function () {\n        return this.props.disableStaticMarkup === true;\n    };\n    AgGridReactLegacy.prototype.isLegacyComponentRendering = function () {\n        return this.props.legacyComponentRendering === true;\n    };\n    AgGridReactLegacy.prototype.processSynchronousChanges = function (changes) {\n        var asyncChanges = __assign({}, changes);\n        if (Object.keys(asyncChanges).length > 0) {\n            var synchronousChanges_1 = {};\n            this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach(function (synchronousChangeProperty) {\n                if (asyncChanges[synchronousChangeProperty]) {\n                    synchronousChanges_1[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\n                    delete asyncChanges[synchronousChangeProperty];\n                }\n            });\n            if (Object.keys(synchronousChanges_1).length > 0 && !!this.api) {\n                ag_grid_community_1.ComponentUtil.processOnChange(synchronousChanges_1, this.gridOptions, this.api, this.columnApi);\n            }\n        }\n        return asyncChanges;\n    };\n    AgGridReactLegacy.prototype.processAsynchronousChanges = function (changes) {\n        var _this = this;\n        if (Object.keys(changes).length > 0) {\n            window.setTimeout(function () {\n                // destroyed?\n                if (_this.api) {\n                    ag_grid_community_1.ComponentUtil.processOnChange(changes, _this.gridOptions, _this.api, _this.columnApi);\n                }\n            });\n        }\n    };\n    AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS = 1000; // a second should be more than enough to instantiate a component\n    AgGridReactLegacy.defaultProps = {\n        legacyComponentRendering: false,\n        disableStaticMarkup: false,\n        maxComponentCreationTimeMs: AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS\n    };\n    return AgGridReactLegacy;\n}(react_1.Component));\nexports.AgGridReactLegacy = AgGridReactLegacy;\nAgGridReactLegacy.propTypes = {\n    gridOptions: prop_types_1.default.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), prop_types_1.default.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, prop_types_1.default.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, prop_types_1.default.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, prop_types_1.default.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, prop_types_1.default.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, prop_types_1.default.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, prop_types_1.default.func);\nfunction addProperties(listOfProps, propType) {\n    listOfProps.forEach(function (propKey) {\n        AgGridReactLegacy[propKey] = propType;\n    });\n}\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\n    __extends(ReactFrameworkComponentWrapper, _super);\n    function ReactFrameworkComponentWrapper(agGridReact) {\n        var _this = _super.call(this) || this;\n        _this.agGridReact = agGridReact;\n        return _this;\n    }\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n        return this.agGridReact.isLegacyComponentRendering() ?\n            new legacyReactComponent_1.LegacyReactComponent(UserReactComponent, this.agGridReact, componentType) :\n            new newReactComponent_1.NewReactComponent(UserReactComponent, this.agGridReact, componentType);\n    };\n    return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper));\n"],"mappings":"AAAA;AACA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;MAAEC,SAAS,EAAE;IAAb,aAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;MAAED,CAAC,CAACI,SAAF,GAAcH,CAAd;IAAkB,CAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;MAAE,KAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IAAc,CAF9E;;IAGA,OAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;EACH,CALD;;EAMA,OAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACnBF,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;IACA,SAASO,EAAT,GAAc;MAAE,KAAKC,WAAL,GAAmBT,CAAnB;IAAuB;;IACvCA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;EACH,CAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGV,MAAM,CAACW,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAIV,CAAT,IAAcS,CAAd,EAAiB,IAAIb,MAAM,CAACQ,SAAP,CAAiBH,cAAjB,CAAgCa,IAAhC,CAAqCL,CAArC,EAAwCT,CAAxC,CAAJ,EACbQ,CAAC,CAACR,CAAD,CAAD,GAAOS,CAAC,CAACT,CAAD,CAAR;IACP;;IACD,OAAOQ,CAAP;EACH,CAPD;;EAQA,OAAOF,QAAQ,CAACS,KAAT,CAAe,IAAf,EAAqBH,SAArB,CAAP;AACH,CAVD;;AAWA,IAAII,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;EAC9D,KAAK,IAAIP,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBO,EAAE,GAAGL,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGO,EAAlD,EAAsDP,CAAC,EAAvD,EAA2DD,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;;EAC3D,KAAK,IAAIK,CAAC,GAAGnB,KAAK,CAACU,CAAD,CAAb,EAAkBU,CAAC,GAAG,CAAtB,EAAyBT,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGO,EAAzC,EAA6CP,CAAC,EAA9C,EACI,KAAK,IAAIU,CAAC,GAAGR,SAAS,CAACF,CAAD,CAAjB,EAAsBW,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACP,MAAzC,EAAiDQ,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACID,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;EACR,OAAOH,CAAP;AACH,CAND;;AAOA,IAAIK,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;EAC3B,IAAIE,MAAM,GAAG,EAAb;EACA,IAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIL,CAAT,IAAcK,GAAd,EAAmB,IAAI5B,MAAM,CAACK,cAAP,CAAsBa,IAAtB,CAA2BU,GAA3B,EAAgCL,CAAhC,CAAJ,EAAwCO,MAAM,CAACP,CAAD,CAAN,GAAYK,GAAG,CAACL,CAAD,CAAf;EAC5EO,MAAM,CAAC,SAAD,CAAN,GAAoBF,GAApB;EACA,OAAOE,MAAP;AACH,CAND;;AAOA,IAAIC,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUH,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGA5B,MAAM,CAACgC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGR,YAAY,CAACS,OAAO,CAAC,OAAD,CAAR,CAA1B;;AACA,IAAIC,YAAY,GAAGN,eAAe,CAACK,OAAO,CAAC,YAAD,CAAR,CAAlC;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,mBAAD,CAAjC;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAII,wBAAwB,GAAGJ,OAAO,CAAC,0BAAD,CAAtC;;AACA,IAAIK,sBAAsB,GAAGL,OAAO,CAAC,wBAAD,CAApC;;AACA,IAAIM,mBAAmB,GAAGN,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAIO,iBAAiB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACrDhD,SAAS,CAAC+C,iBAAD,EAAoBC,MAApB,CAAT;;EACA,SAASD,iBAAT,CAA2BE,KAA3B,EAAkC;IAC9B,IAAIC,KAAK,GAAGF,MAAM,CAAC1B,IAAP,CAAY,IAAZ,EAAkB2B,KAAlB,KAA4B,IAAxC;;IACAC,KAAK,CAACD,KAAN,GAAcA,KAAd;IACAC,KAAK,CAACC,sBAAN,GAA+B,IAAIP,wBAAwB,CAACQ,sBAA7B,EAA/B;IACAF,KAAK,CAACG,GAAN,GAAY,IAAZ;IACAH,KAAK,CAACI,OAAN,GAAgB,EAAhB;IACAJ,KAAK,CAACK,sBAAN,GAA+B,KAA/B;IACAL,KAAK,CAACM,SAAN,GAAkB,KAAlB;IACAN,KAAK,CAACO,6BAAN,GAAsC,CAAC,SAAD,CAAtC;IACA,OAAOP,KAAP;EACH;;EACDH,iBAAiB,CAACnC,SAAlB,CAA4B8C,MAA5B,GAAqC,YAAY;IAC7C,IAAIR,KAAK,GAAG,IAAZ;;IACA,OAAOX,OAAO,CAACoB,OAAR,CAAgBC,aAAhB,CAA8B,KAA9B,EAAqC;MACxCC,KAAK,EAAE,KAAKC,iBAAL,EADiC;MAExCC,SAAS,EAAE,KAAKd,KAAL,CAAWc,SAFkB;MAGxCC,GAAG,EAAE,UAAUC,CAAV,EAAa;QACdf,KAAK,CAACgB,QAAN,GAAiBD,CAAjB;MACH;IALuC,CAArC,EAMJ,KAAKX,OAND,CAAP;EAOH,CATD;;EAUAP,iBAAiB,CAACnC,SAAlB,CAA4BkD,iBAA5B,GAAgD,YAAY;IACxD,OAAOhD,QAAQ,CAAC;MAAEqD,MAAM,EAAE;IAAV,CAAD,EAAsB,KAAKlB,KAAL,CAAWmB,cAAX,IAA6B,EAAnD,CAAf;EACH,CAFD;;EAGArB,iBAAiB,CAACnC,SAAlB,CAA4ByD,iBAA5B,GAAgD,YAAY;IACxD,IAAIC,OAAO,GAAG,KAAKrB,KAAL,CAAWqB,OAAX,IAAsB,EAApC;IACA,IAAIC,UAAU,GAAG;MACbC,qBAAqB,EAAE;QACnBC,WAAW,EAAE,IADM;QAEnBC,yBAAyB,EAAE,IAAIC,8BAAJ,CAAmC,IAAnC;MAFR,CADV;MAKbL,OAAO,EAAEA;IALI,CAAjB;IAOA,IAAIM,WAAW,GAAG,KAAK3B,KAAL,CAAW2B,WAAX,IAA0B,EAA5C;IACA,IAAIC,QAAQ,GAAG,KAAK5B,KAAL,CAAW4B,QAA1B;;IACA,IAAIlC,cAAc,CAACmC,YAAf,CAA4BC,eAA5B,CAA4CF,QAA5C,CAAJ,EAA2D;MACvDD,WAAW,CAACI,UAAZ,GAAyBrC,cAAc,CAACmC,YAAf,CAA4BG,kBAA5B,CAA+CJ,QAA/C,CAAzB;IACH;;IACD,KAAKD,WAAL,GAAmBlC,mBAAmB,CAACwC,aAApB,CAAkCC,2BAAlC,CAA8DP,WAA9D,EAA2E,KAAK3B,KAAhF,CAAnB,CAdwD,CAexD;;IACA,IAAIP,mBAAmB,CAAC0C,IAAxB,CAA6B,KAAKlB,QAAlC,EAA4C,KAAKU,WAAjD,EAA8DL,UAA9D;IACA,KAAKlB,GAAL,GAAW,KAAKuB,WAAL,CAAiBvB,GAA5B;IACA,KAAKgC,SAAL,GAAiB,KAAKT,WAAL,CAAiBS,SAAlC;IACA,KAAKpC,KAAL,CAAWqC,UAAX,CAAsB,KAAKjC,GAA3B,EAAgC,KAAKgC,SAArC;EACH,CApBD;;EAqBAtC,iBAAiB,CAACnC,SAAlB,CAA4B2E,eAA5B,GAA8C,UAAUC,cAAV,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8C;IACxF,IAAIxC,KAAK,GAAG,IAAZ;;IACA,IAAIwC,SAAS,KAAK,KAAK,CAAvB,EAA0B;MAAEA,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAZ;IAAyB,CAFmC,CAGxF;;;IACA,IAAI,KAAKpC,SAAT,EAAoB;MAChBiC,OAAO,CAAC,IAAD,CAAP;MACA;IACH;;IACD,IAAID,cAAc,CAACK,QAAf,EAAJ,EAA+B;MAC3BJ,OAAO,CAACD,cAAD,CAAP;IACH,CAFD,MAGK;MACD,IAAIG,IAAI,CAACC,GAAL,KAAaF,SAAb,IAA0B,KAAKzC,KAAL,CAAW6C,0BAArC,IAAmE,CAAC,KAAKvC,sBAA7E,EAAqG;QACjG;QACA;QACA,IAAIiC,cAAc,CAACO,WAAf,EAAJ,EAAkC;UAC9BN,OAAO,CAACD,cAAD,CAAP;UACA;QACH;;QACDQ,OAAO,CAACC,KAAR,CAAc,+BAA+BT,cAAc,CAACU,qBAAf,EAA/B,GAAwE,uBAAxE,GAAkGnD,iBAAiB,CAACoD,iCAApH,GAAwJ,IAAtK;QACA;MACH;;MACDC,MAAM,CAACC,UAAP,CAAkB,YAAY;QAC1BnD,KAAK,CAACqC,eAAN,CAAsBC,cAAtB,EAAsCC,OAAtC,EAA+CC,SAA/C;MACH,CAFD;IAGH;EACJ,CA1BD;EA2BA;AACJ;AACA;AACA;AACA;;;EACI3C,iBAAiB,CAACnC,SAAlB,CAA4B0F,gBAA5B,GAA+C,UAAUC,MAAV,EAAkBf,cAAlB,EAAkCC,OAAlC,EAA2C;IACtF,KAAKnC,OAAL,GAAe9B,cAAc,CAAC,KAAK8B,OAAN,EAAe,CAACiD,MAAD,CAAf,CAA7B;IACA,KAAKhB,eAAL,CAAqBC,cAArB,EAAqCC,OAArC;IACA,KAAKe,WAAL;EACH,CAJD;;EAKAzD,iBAAiB,CAACnC,SAAlB,CAA4B6F,iBAA5B,GAAgD,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;IAC5E,KAAKrD,OAAL,CAAa,KAAKA,OAAL,CAAasD,OAAb,CAAqBF,SAArB,CAAb,IAAgDC,SAAhD;IACA,KAAKH,WAAL;EACH,CAHD;;EAIAzD,iBAAiB,CAACnC,SAAlB,CAA4B4F,WAA5B,GAA0C,YAAY;IAClD,IAAItD,KAAK,GAAG,IAAZ;;IACA,IAAI,KAAKK,sBAAT,EAAiC;MAC7B;IACH;;IACD8C,UAAU,CAAC,YAAY;MACnB,IAAInD,KAAK,CAACG,GAAV,EAAe;QAAE;QACbH,KAAK,CAAC2D,WAAN,CAAkB,YAAY;UAC1B3D,KAAK,CAACK,sBAAN,GAA+B,KAA/B;QACH,CAFD;MAGH;IACJ,CANS,CAAV;IAOA,KAAKA,sBAAL,GAA8B,IAA9B;EACH,CAbD;;EAcAR,iBAAiB,CAACnC,SAAlB,CAA4BkG,aAA5B,GAA4C,UAAUP,MAAV,EAAkB;IAC1D,KAAKjD,OAAL,GAAe,KAAKA,OAAL,CAAayD,MAAb,CAAoB,UAAUC,SAAV,EAAqB;MAAE,OAAOA,SAAS,KAAKT,MAArB;IAA8B,CAAzE,CAAf;IACA,KAAKC,WAAL;EACH,CAHD;;EAIAzD,iBAAiB,CAACnC,SAAlB,CAA4BqG,sBAA5B,GAAqD,UAAUC,OAAV,EAAmB;IACpE,IAAIA,OAAO,KAAK,SAAhB,EAA2B;MACvB,IAAI,KAAKjE,KAAL,CAAWkE,8BAAf,EAA+C;QAC3C,OAAO,KAAKlE,KAAL,CAAWkE,8BAAlB;MACH,CAFD,MAGK,IAAI,KAAKC,qBAAL,EAAJ,EAAkC;QACnC,OAAOxE,wBAAwB,CAACyE,2BAAzB,CAAqDC,aAA5D;MACH;IACJ,CARmE,CASpE;;;IACA,OAAO1E,wBAAwB,CAACyE,2BAAzB,CAAqDE,cAA5D;EACH,CAXD;;EAYAxE,iBAAiB,CAACnC,SAAlB,CAA4BwG,qBAA5B,GAAoD,YAAY;IAC5D,OAAQ,KAAKnE,KAAL,CAAWuE,gBAAX,IAA+B,KAAKvE,KAAL,CAAWwE,aAA3C,IACF,KAAKxE,KAAL,CAAW2B,WAAX,KAA2B,KAAK3B,KAAL,CAAW2B,WAAX,CAAuB4C,gBAAvB,IAA2C,KAAKvE,KAAL,CAAW2B,WAAX,CAAuB6C,aAA7F,CADL;EAEH,CAHD;;EAIA1E,iBAAiB,CAACnC,SAAlB,CAA4B8G,qBAA5B,GAAoD,UAAUC,SAAV,EAAqB;IACrE,KAAKC,mBAAL,CAAyB,KAAK3E,KAA9B,EAAqC0E,SAArC,EADqE,CAErE;IACA;IACA;;IACA,OAAO,KAAP;EACH,CAND;;EAOA5E,iBAAiB,CAACnC,SAAlB,CAA4BiH,kBAA5B,GAAiD,UAAUC,SAAV,EAAqB;IAClE,KAAKF,mBAAL,CAAyBE,SAAzB,EAAoC,KAAK7E,KAAzC;EACH,CAFD;;EAGAF,iBAAiB,CAACnC,SAAlB,CAA4BgH,mBAA5B,GAAkD,UAAUE,SAAV,EAAqBH,SAArB,EAAgC;IAC9E,IAAII,OAAO,GAAG,EAAd;IACA,KAAKC,0BAAL,CAAgCF,SAAhC,EAA2CH,SAA3C,EAAsDI,OAAtD;IACA,KAAKE,+BAAL,CAAqCN,SAArC,EAAgDI,OAAhD;IACA,KAAKG,yBAAL,CAA+BH,OAA/B;IACA,KAAKI,0BAAL,CAAgCJ,OAAhC;EACH,CAND;;EAOAhF,iBAAiB,CAACnC,SAAlB,CAA4BqH,+BAA5B,GAA8D,UAAUN,SAAV,EAAqBI,OAArB,EAA8B;IACxF;IACA;IACA,IAAK,KAAK9E,KAAL,CAAW2B,WAAX,IAA0B,KAAK3B,KAAL,CAAW2B,WAAX,CAAuBI,UAAlD,IAAiE,KAAK/B,KAAL,CAAW+B,UAAhF,EAA4F;MACxF;IACH;;IACD,IAAIoD,YAAY,GAAG,CAAC,CAACT,SAAS,CAACU,KAA/B;IACA,IAAInB,OAAO,GAAG,YAAd;IACA,IAAIoB,cAAc,GAAG,KAAK1D,WAAL,CAAiBI,UAAtC;;IACA,IAAIrC,cAAc,CAACmC,YAAf,CAA4BC,eAA5B,CAA4C4C,SAAS,CAAC9C,QAAtD,CAAJ,EAAqE;MACjE,IAAI0D,iBAAiB,GAAG,KAAKpF,sBAAL,CAA4BqF,WAA5B,CAAwC,KAAKvB,sBAAL,CAA4BC,OAA5B,CAAxC,CAAxB;MACA,IAAIuB,UAAU,GAAG9F,cAAc,CAACmC,YAAf,CAA4BG,kBAA5B,CAA+C0C,SAAS,CAAC9C,QAAzD,CAAjB;;MACA,IAAI,CAAC0D,iBAAiB,CAACG,QAAlB,CAA2BJ,cAA3B,EAA2CG,UAA3C,CAAL,EAA6D;QACzD,IAAIL,YAAJ,EAAkB;UACdpC,OAAO,CAAC2C,GAAR,CAAY,0CAAZ;QACH;;QACDZ,OAAO,CAACb,OAAD,CAAP,GACI;UACI0B,aAAa,EAAEN,cADnB;UAEIO,YAAY,EAAEJ;QAFlB,CADJ;MAKH;IACJ,CAbD,MAcK,IAAIH,cAAc,IAAIA,cAAc,CAACjH,MAAf,GAAwB,CAA9C,EAAiD;MAClD0G,OAAO,CAACb,OAAD,CAAP,GACI;QACI0B,aAAa,EAAEN,cADnB;QAEIO,YAAY,EAAE;MAFlB,CADJ;IAKH;EACJ,CA9BD;;EA+BA9F,iBAAiB,CAACnC,SAAlB,CAA4BoH,0BAA5B,GAAyD,UAAUF,SAAV,EAAqBH,SAArB,EAAgCI,OAAhC,EAAyC;IAC9F,IAAI7E,KAAK,GAAG,IAAZ;;IACA,IAAIkF,YAAY,GAAG,CAAC,CAACT,SAAS,CAACU,KAA/B;IACAjI,MAAM,CAAC0I,IAAP,CAAYnB,SAAZ,EAAuBoB,OAAvB,CAA+B,UAAU7B,OAAV,EAAmB;MAC9C,IAAIxE,mBAAmB,CAACsG,CAApB,CAAsBC,QAAtB,CAA+BvG,mBAAmB,CAACwC,aAApB,CAAkCgE,cAAjE,EAAiFhC,OAAjF,CAAJ,EAA+F;QAC3F,IAAIiC,uBAAuB,GAAGjG,KAAK,CAACC,sBAAN,CAA6BqF,WAA7B,CAAyCtF,KAAK,CAAC+D,sBAAN,CAA6BC,OAA7B,CAAzC,CAA9B;;QACA,IAAI,CAACiC,uBAAuB,CAACT,QAAxB,CAAiCZ,SAAS,CAACZ,OAAD,CAA1C,EAAqDS,SAAS,CAACT,OAAD,CAA9D,CAAL,EAA+E;UAC3E,IAAIkB,YAAJ,EAAkB;YACdpC,OAAO,CAAC2C,GAAR,CAAY,mBAAmBzB,OAAnB,GAA6B,oBAAzC;UACH;;UACDa,OAAO,CAACb,OAAD,CAAP,GAAmB;YACf0B,aAAa,EAAEd,SAAS,CAACZ,OAAD,CADT;YAEf2B,YAAY,EAAElB,SAAS,CAACT,OAAD;UAFR,CAAnB;QAIH;MACJ;IACJ,CAbD;IAcAxE,mBAAmB,CAACwC,aAApB,CAAkCkE,iBAAlC,GAAsDL,OAAtD,CAA8D,UAAUM,QAAV,EAAoB;MAC9E,IAAIC,QAAQ,GAAGpG,KAAK,CAACD,KAArB;;MACA,IAAIqG,QAAQ,CAACD,QAAD,CAAR,KAAuB1B,SAAS,CAAC0B,QAAD,CAApC,EAAgD;QAC5C,IAAIjB,YAAJ,EAAkB;UACdpC,OAAO,CAAC2C,GAAR,CAAY,mBAAmBU,QAAnB,GAA8B,0BAA1C;QACH;;QACDtB,OAAO,CAACsB,QAAD,CAAP,GAAoB;UAChBT,aAAa,EAAEd,SAAS,CAACuB,QAAD,CADR;UAEhBR,YAAY,EAAElB,SAAS,CAAC0B,QAAD;QAFP,CAApB;MAIH;IACJ,CAXD;EAYH,CA7BD;;EA8BAtG,iBAAiB,CAACnC,SAAlB,CAA4B2I,oBAA5B,GAAmD,YAAY;IAC3D,IAAI,KAAKlG,GAAT,EAAc;MACV,KAAKA,GAAL,CAASmG,OAAT;MACA,KAAKnG,GAAL,GAAW,IAAX;IACH;;IACD,KAAKG,SAAL,GAAiB,IAAjB;EACH,CAND;;EAOAT,iBAAiB,CAACnC,SAAlB,CAA4B6I,qBAA5B,GAAoD,YAAY;IAC5D,OAAO,KAAKxG,KAAL,CAAWyG,mBAAX,KAAmC,IAA1C;EACH,CAFD;;EAGA3G,iBAAiB,CAACnC,SAAlB,CAA4B+I,0BAA5B,GAAyD,YAAY;IACjE,OAAO,KAAK1G,KAAL,CAAW2G,wBAAX,KAAwC,IAA/C;EACH,CAFD;;EAGA7G,iBAAiB,CAACnC,SAAlB,CAA4BsH,yBAA5B,GAAwD,UAAUH,OAAV,EAAmB;IACvE,IAAI8B,YAAY,GAAG/I,QAAQ,CAAC,EAAD,EAAKiH,OAAL,CAA3B;;IACA,IAAI3H,MAAM,CAAC0I,IAAP,CAAYe,YAAZ,EAA0BxI,MAA1B,GAAmC,CAAvC,EAA0C;MACtC,IAAIyI,oBAAoB,GAAG,EAA3B;MACA,KAAKrG,6BAAL,CAAmCsF,OAAnC,CAA2C,UAAUgB,yBAAV,EAAqC;QAC5E,IAAIF,YAAY,CAACE,yBAAD,CAAhB,EAA6C;UACzCD,oBAAoB,CAACC,yBAAD,CAApB,GAAkDF,YAAY,CAACE,yBAAD,CAA9D;UACA,OAAOF,YAAY,CAACE,yBAAD,CAAnB;QACH;MACJ,CALD;;MAMA,IAAI3J,MAAM,CAAC0I,IAAP,CAAYgB,oBAAZ,EAAkCzI,MAAlC,GAA2C,CAA3C,IAAgD,CAAC,CAAC,KAAKgC,GAA3D,EAAgE;QAC5DX,mBAAmB,CAACwC,aAApB,CAAkC8E,eAAlC,CAAkDF,oBAAlD,EAAwE,KAAKlF,WAA7E,EAA0F,KAAKvB,GAA/F,EAAoG,KAAKgC,SAAzG;MACH;IACJ;;IACD,OAAOwE,YAAP;EACH,CAfD;;EAgBA9G,iBAAiB,CAACnC,SAAlB,CAA4BuH,0BAA5B,GAAyD,UAAUJ,OAAV,EAAmB;IACxE,IAAI7E,KAAK,GAAG,IAAZ;;IACA,IAAI9C,MAAM,CAAC0I,IAAP,CAAYf,OAAZ,EAAqB1G,MAArB,GAA8B,CAAlC,EAAqC;MACjC+E,MAAM,CAACC,UAAP,CAAkB,YAAY;QAC1B;QACA,IAAInD,KAAK,CAACG,GAAV,EAAe;UACXX,mBAAmB,CAACwC,aAApB,CAAkC8E,eAAlC,CAAkDjC,OAAlD,EAA2D7E,KAAK,CAAC0B,WAAjE,EAA8E1B,KAAK,CAACG,GAApF,EAAyFH,KAAK,CAACmC,SAA/F;QACH;MACJ,CALD;IAMH;EACJ,CAVD;;EAWAtC,iBAAiB,CAACoD,iCAAlB,GAAsD,IAAtD,CAhPqD,CAgPO;;EAC5DpD,iBAAiB,CAACkH,YAAlB,GAAiC;IAC7BL,wBAAwB,EAAE,KADG;IAE7BF,mBAAmB,EAAE,KAFQ;IAG7B5D,0BAA0B,EAAE/C,iBAAiB,CAACoD;EAHjB,CAAjC;EAKA,OAAOpD,iBAAP;AACH,CAvPsC,CAuPrCR,OAAO,CAAC2H,SAvP6B,CAAvC;;AAwPA7H,OAAO,CAACU,iBAAR,GAA4BA,iBAA5B;AACAA,iBAAiB,CAACoH,SAAlB,GAA8B;EAC1BvF,WAAW,EAAEnC,YAAY,CAACkB,OAAb,CAAqByG;AADR,CAA9B;AAGAC,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkCkE,iBAAlC,EAAD,EAAwD3G,YAAY,CAACkB,OAAb,CAAqB2G,IAA7E,CAAb;AACAD,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkCqF,kBAAnC,EAAuD9H,YAAY,CAACkB,OAAb,CAAqB6G,IAA5E,CAAb;AACAH,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkCuF,iBAAnC,EAAsDhI,YAAY,CAACkB,OAAb,CAAqB+G,MAA3E,CAAb;AACAL,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkCyF,iBAAnC,EAAsDlI,YAAY,CAACkB,OAAb,CAAqByG,MAA3E,CAAb;AACAC,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkC0F,gBAAnC,EAAqDnI,YAAY,CAACkB,OAAb,CAAqBkH,KAA1E,CAAb;AACAR,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkC4F,iBAAnC,EAAsDrI,YAAY,CAACkB,OAAb,CAAqBoH,MAA3E,CAAb;AACAV,aAAa,CAAC3H,mBAAmB,CAACwC,aAApB,CAAkC8F,mBAAnC,EAAwDvI,YAAY,CAACkB,OAAb,CAAqB2G,IAA7E,CAAb;;AACA,SAASD,aAAT,CAAuBY,WAAvB,EAAoCC,QAApC,EAA8C;EAC1CD,WAAW,CAAClC,OAAZ,CAAoB,UAAU7B,OAAV,EAAmB;IACnCnE,iBAAiB,CAACmE,OAAD,CAAjB,GAA6BgE,QAA7B;EACH,CAFD;AAGH;;AACD,IAAIvG,8BAA8B;AAAG;AAAe,UAAU3B,MAAV,EAAkB;EAClEhD,SAAS,CAAC2E,8BAAD,EAAiC3B,MAAjC,CAAT;;EACA,SAAS2B,8BAAT,CAAwCF,WAAxC,EAAqD;IACjD,IAAIvB,KAAK,GAAGF,MAAM,CAAC1B,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACA4B,KAAK,CAACuB,WAAN,GAAoBA,WAApB;IACA,OAAOvB,KAAP;EACH;;EACDyB,8BAA8B,CAAC/D,SAA/B,CAAyCuK,aAAzC,GAAyD,UAAUC,kBAAV,EAA8BC,aAA9B,EAA6C;IAClG,OAAO,KAAK5G,WAAL,CAAiBkF,0BAAjB,KACH,IAAI9G,sBAAsB,CAACyI,oBAA3B,CAAgDF,kBAAhD,EAAoE,KAAK3G,WAAzE,EAAsF4G,aAAtF,CADG,GAEH,IAAIvI,mBAAmB,CAACyI,iBAAxB,CAA0CH,kBAA1C,EAA8D,KAAK3G,WAAnE,EAAgF4G,aAAhF,CAFJ;EAGH,CAJD;;EAKA,OAAO1G,8BAAP;AACH,CAbmD,CAalDjC,mBAAmB,CAAC8I,oBAb8B,CAApD"},"metadata":{},"sourceType":"script"}